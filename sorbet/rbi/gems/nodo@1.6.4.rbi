# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `nodo` gem.
# Please instead update this file by running `bin/tapioca gem nodo`.

# source://nodo//lib/nodo.rb#10
module Nodo
  class << self
    # source://nodo//lib/nodo.rb#12
    def binary; end

    # source://nodo//lib/nodo.rb#12
    def binary=(_arg0); end

    # source://nodo//lib/nodo.rb#12
    def debug; end

    # source://nodo//lib/nodo.rb#12
    def debug=(_arg0); end

    # source://nodo//lib/nodo.rb#12
    def env; end

    # source://nodo//lib/nodo.rb#12
    def env=(_arg0); end

    # source://nodo//lib/nodo.rb#12
    def logger; end

    # source://nodo//lib/nodo.rb#12
    def logger=(_arg0); end

    # source://nodo//lib/nodo.rb#12
    def modules_root; end

    # source://nodo//lib/nodo.rb#12
    def modules_root=(_arg0); end

    # source://nodo//lib/nodo.rb#12
    def timeout; end

    # source://nodo//lib/nodo.rb#12
    def timeout=(_arg0); end
  end
end

# source://nodo//lib/nodo/errors.rb#4
class Nodo::CallError < ::Nodo::Error; end

# source://nodo//lib/nodo/errors.rb#5
class Nodo::ClassError < ::Nodo::Error
  # source://nodo//lib/nodo/errors.rb#6
  def initialize(method = T.unsafe(nil)); end
end

# source://nodo//lib/nodo/client.rb#4
class Nodo::Client < ::Net::HTTP
  # source://nodo//lib/nodo/client.rb#7
  def initialize(address, port = T.unsafe(nil)); end

  # source://nodo//lib/nodo/client.rb#21
  def connect; end

  # source://nodo//lib/nodo/client.rb#29
  def connect_unix; end
end

# source://nodo//lib/nodo/client.rb#5
Nodo::Client::UNIX_REGEXP = T.let(T.unsafe(nil), Regexp)

# source://nodo//lib/nodo/constant.rb#2
class Nodo::Constant
  # source://nodo//lib/nodo/constant.rb#5
  def initialize(name, value); end

  # source://nodo//lib/nodo/constant.rb#3
  def name; end

  # source://nodo//lib/nodo/constant.rb#9
  def to_js; end

  # source://nodo//lib/nodo/constant.rb#3
  def value; end
end

# source://nodo//lib/nodo/core.rb#2
class Nodo::Core
  # source://nodo//lib/nodo/core.rb#143
  def initialize; end

  # source://nodo//lib/nodo/core.rb#152
  def evaluate(code); end

  private

  # source://nodo//lib/nodo/core.rb#233
  def call_js_method(method, args); end

  # source://nodo//lib/nodo/core.rb#171
  def clsid; end

  # source://nodo//lib/nodo/core.rb#175
  def context_defined?; end

  # source://nodo//lib/nodo/core.rb#191
  def ensure_class_is_defined; end

  # source://nodo//lib/nodo/core.rb#197
  def ensure_context_is_defined; end

  # source://nodo//lib/nodo/core.rb#186
  def ensure_process_is_spawned; end

  # source://nodo//lib/nodo/core.rb#261
  def handle_error(response, function); end

  # source://nodo//lib/nodo/core.rb#179
  def log_exception(e); end

  # source://nodo//lib/nodo/core.rb#159
  def node_pid; end

  # source://nodo//lib/nodo/core.rb#274
  def parse_response(response); end

  # source://nodo//lib/nodo/core.rb#167
  def socket_path; end

  # source://nodo//lib/nodo/core.rb#206
  def spawn_process; end

  # source://nodo//lib/nodo/core.rb#163
  def tmpdir; end

  # source://nodo//lib/nodo/core.rb#219
  def wait_for_socket; end

  # source://nodo//lib/nodo/core.rb#279
  def with_tempfile(name); end

  class << self
    # source://nodo//lib/nodo/core.rb#21
    def class_defined; end

    # source://nodo//lib/nodo/core.rb#21
    def class_defined=(_arg0); end

    # source://nodo//lib/nodo/core.rb#33
    def class_defined?; end

    # source://nodo//lib/nodo/core.rb#37
    def clsid; end

    # source://nodo//lib/nodo/core.rb#49
    def constants; end

    # source://nodo//lib/nodo/core.rb#49
    def dependencies; end

    # source://nodo//lib/nodo/core.rb#55
    def functions; end

    # source://nodo//lib/nodo/core.rb#83
    def generate_class_code; end

    # source://nodo//lib/nodo/core.rb#60
    def generate_core_code; end

    # source://nodo//lib/nodo/core.rb#23
    def inherited(subclass); end

    # source://nodo//lib/nodo/core.rb#29
    def instance; end

    # source://nodo//lib/nodo/core.rb#49
    def scripts; end

    protected

    # source://nodo//lib/nodo/core.rb#42
    def constants=(value); end

    # source://nodo//lib/nodo/core.rb#42
    def dependencies=(value); end

    # source://nodo//lib/nodo/core.rb#98
    def finalize_context(context_id); end

    # source://nodo//lib/nodo/core.rb#42
    def functions=(value); end

    # source://nodo//lib/nodo/core.rb#42
    def scripts=(value); end

    private

    # source://nodo//lib/nodo/core.rb#122
    def class_function(*methods); end

    # source://nodo//lib/nodo/core.rb#126
    def const(name, value); end

    # source://nodo//lib/nodo/core.rb#114
    def function(name, _code = T.unsafe(nil), timeout: T.unsafe(nil), code: T.unsafe(nil), &block); end

    # source://nodo//lib/nodo/core.rb#134
    def nodo_js; end

    # source://nodo//lib/nodo/core.rb#108
    def require(*mods); end

    # source://nodo//lib/nodo/core.rb#138
    def reserved_method_name?(name); end

    # source://nodo//lib/nodo/core.rb#130
    def script(code = T.unsafe(nil), &block); end
  end
end

# source://nodo//lib/nodo/core.rb#9
Nodo::Core::ARRAY_CLASS_ATTRIBUTES = T.let(T.unsafe(nil), Array)

# source://nodo//lib/nodo/core.rb#11
Nodo::Core::CLASS_ATTRIBUTES = T.let(T.unsafe(nil), Array)

# source://nodo//lib/nodo/core.rb#4
Nodo::Core::DEFINE_METHOD = T.let(T.unsafe(nil), String)

# source://nodo//lib/nodo/core.rb#5
Nodo::Core::EVALUATE_METHOD = T.let(T.unsafe(nil), String)

# source://nodo//lib/nodo/core.rb#6
Nodo::Core::GC_METHOD = T.let(T.unsafe(nil), String)

# source://nodo//lib/nodo/core.rb#10
Nodo::Core::HASH_CLASS_ATTRIBUTES = T.let(T.unsafe(nil), Array)

# source://nodo//lib/nodo/core.rb#7
Nodo::Core::INTERNAL_METHODS = T.let(T.unsafe(nil), Array)

# source://nodo//lib/nodo/core.rb#8
Nodo::Core::LAUNCH_TIMEOUT = T.let(T.unsafe(nil), Integer)

# source://nodo//lib/nodo/core.rb#3
Nodo::Core::SOCKET_NAME = T.let(T.unsafe(nil), String)

# source://nodo//lib/nodo/dependency.rb#2
class Nodo::Dependency
  # source://nodo//lib/nodo/dependency.rb#5
  def initialize(name, package); end

  # source://nodo//lib/nodo/dependency.rb#3
  def name; end

  # source://nodo//lib/nodo/dependency.rb#3
  def package; end

  # source://nodo//lib/nodo/dependency.rb#9
  def to_js; end
end

# source://nodo//lib/nodo/errors.rb#55
class Nodo::DependencyError < ::Nodo::JavaScriptError
  private

  # source://nodo//lib/nodo/errors.rb#58
  def generate_message; end
end

# source://nodo//lib/nodo/errors.rb#2
class Nodo::Error < ::StandardError; end

# source://nodo//lib/nodo/function.rb#2
class Nodo::Function
  # source://nodo//lib/nodo/function.rb#5
  def initialize(name, code, source_location, timeout, &block); end

  # source://nodo//lib/nodo/function.rb#3
  def code; end

  # source://nodo//lib/nodo/function.rb#3
  def name; end

  # source://nodo//lib/nodo/function.rb#3
  def source_location; end

  # source://nodo//lib/nodo/function.rb#3
  def timeout; end

  # source://nodo//lib/nodo/function.rb#13
  def to_js; end
end

# source://nodo//lib/nodo/errors.rb#11
class Nodo::JavaScriptError < ::Nodo::Error
  # source://nodo//lib/nodo/errors.rb#14
  def initialize(attributes = T.unsafe(nil), function = T.unsafe(nil)); end

  # source://nodo//lib/nodo/errors.rb#12
  def attributes; end

  # source://nodo//lib/nodo/errors.rb#23
  def to_s; end

  private

  # source://nodo//lib/nodo/errors.rb#49
  def format_location(loc); end

  # source://nodo//lib/nodo/errors.rb#31
  def generate_backtrace(stack); end

  # source://nodo//lib/nodo/errors.rb#44
  def generate_message; end
end

# source://nodo//lib/nodo/railtie.rb#4
class Nodo::Railtie < ::Rails::Railtie; end

# source://nodo//lib/nodo/script.rb#2
class Nodo::Script
  # source://nodo//lib/nodo/script.rb#5
  def initialize(code = T.unsafe(nil), &block); end

  # source://nodo//lib/nodo/script.rb#3
  def code; end

  # source://nodo//lib/nodo/script.rb#10
  def to_js; end
end

# source://nodo//lib/nodo/errors.rb#3
class Nodo::TimeoutError < ::Nodo::Error; end

# source://nodo//lib/nodo/version.rb#2
Nodo::VERSION = T.let(T.unsafe(nil), String)
